// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns__margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

@mixin media( $res ) {
	@if mobile == $res {
		@media only screen and (min-width: $mobile_width) {
			@content;
		}
	}
		
	@if tablet == $res {
		@media only screen and (min-width: $tablet_width) {
			@content;
		}
	}

	@if tabletportrait == $res {
		@media only screen and (min-width: $tablet_portrait) {
			@content;
		}
	}
	
	@if landscape == $res {
		@media only screen and (min-width: $landscape_width) {
			@content;
		}
	}
	
	@if desktop == $res {
		@media only screen and (min-width: $desktop_width) {
			@content;
		}
	}

	@if wide == $res {
		@media only screen and (min-width: $wide_width) {
			@content;
		}
	}
	
	@if bumpfont == $res {
		@media only screen and (min-width: $bumpfont) {
			@content;
		}
	}	
}

@mixin link-transition( $attr: color ) {
	transition: $attr $link_transition ease-in-out;
}

@mixin button-transition() {
	transition: background $button_transition ease-in-out;
}

@mixin button-all-transition() {
	transition: all $button_transition ease-in-out;
}

@mixin background-transition() {
	transition: background $background_transition ease-in-out;
}

@mixin selection {
	::-moz-selection {
		@content;
	}
	::selection {
		@content;
	}
}
